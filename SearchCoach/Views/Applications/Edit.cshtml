@{
  Layout = "_Layout";
}

@model SearchCoach.Models.Application
<div class="jumbotron text-center">
<h2>Edit</h2>

<h4>Edit this applicatio : @Html.DisplayFor(model => model.Role)</h4>

@using (Html.BeginForm())
{
  @Html.HiddenFor(model => model.ApplicationId)
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Role)
      @Html.TextBoxFor(model => model.Role)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.ResumeURL)
      @Html.TextBoxFor(model => model.ResumeURL)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.CoverLetterURL)
      @Html.TextBoxFor(model => model.CoverLetterURL)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.IsRemote)
      @Html.CheckBoxFor(model => model.IsRemote)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.IsHybrid)
      @Html.CheckBoxFor(model => model.IsHybrid)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.TechStack)
      @Html.TextBoxFor(model => model.TechStack)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Network)
      @Html.TextBoxFor(model => model.Network)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Company)
      @Html.DropDownList("CompanyId")
      </div>
  </div>

  <input type="submit" value="Add new application" class="btn-secondary" />
}
<div class="border-top mt-4 pt-4">
@* EDIT STATUS *@
@using (Html.BeginForm("Edit", "Statuses", routeValues: new { statusId = Model.Status.StatusId, id = Model.ApplicationId}))
{
  @Html.Hidden("StatusId", @Model.Status.StatusId)
  
  <div class="form-row">
    <div class="form-group col-md-12">
        @Html.LabelFor(model => model.Status.Stage)
        @Html.EditorFor(model => model.Status.Stage)
      </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
        @Html.LabelFor(model => model.Status.Notes)
        @Html.EditorFor(model => model.Status.Notes)
      </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Status.PhoneScreen)
      @Html.EditorFor(model => model.Status.PhoneScreen)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Status.Interview1)
      @Html.EditorFor(model => model.Status.Interview1)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Status.Interview2)
      @Html.EditorFor(model => model.Status.Interview2)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Status.WhiteBoarding)
      @Html.EditorFor(model => model.Status.WhiteBoarding)
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-12">
      @Html.LabelFor(model => model.Status.Offer)
      @Html.EditorFor(model => model.Status.Offer)
    </div>
  </div>
  <input type="submit" value="Save" class="btn-secondary"/>
}
</div>

<div class="button">
  <p>@Html.ActionLink("Back to list", "Index")</p>
</div>

</div>